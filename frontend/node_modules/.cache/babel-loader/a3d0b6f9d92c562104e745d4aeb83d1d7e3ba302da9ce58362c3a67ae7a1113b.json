{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prems\\\\Documents\\\\MyDocuments\\\\Coding Practice\\\\All Projects\\\\onlinec\\\\frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport LanguageSelector from \"./components/LanguageSelector\";\nimport CodeEditor from \"./components/CodeEditor\";\nimport InputBox from \"./components/InputBox\";\nimport OutputBox from \"./components/OutputBox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TEMPLATES = {\n  python: `# Python Hello World\\nname = input()\\nprint(\"Hello,\", name)`,\n  java: `// Java Hello World\\nimport java.util.*;\\npublic class Main {\\n  public static void main(String[] args) {\\n    Scanner s = new Scanner(System.in);\\n    String name = s.nextLine();\\n    System.out.println(\"Hello, \" + name);\\n  }\\n}`,\n  cpp: `// C++ Hello World\\n#include <iostream>\\nusing namespace std;\\nint main() {\\n    string name;\\n    cin >> name;\\n    cout << \"Hello, \" << name << endl;\\n    return 0;\\n}`\n};\nexport default function App() {\n  _s();\n  const [language, setLanguage] = useState(\"python\");\n  const [code, setCode] = useState(TEMPLATES.python);\n  const [stdin, setStdin] = useState(\"\");\n  const [output, setOutput] = useState({\n    stdout: \"\",\n    stderr: \"\",\n    timed_out: false,\n    exit_code: null\n  });\n  const [loading, setLoading] = useState(false);\n\n  // Update editor template when language changes\n  useEffect(() => {\n    setCode(TEMPLATES[language]);\n    setOutput({\n      stdout: \"\",\n      stderr: \"\",\n      timed_out: false,\n      exit_code: null\n    });\n  }, [language]);\n  const runCode = async () => {\n    setLoading(true);\n    setOutput({\n      stdout: \"\",\n      stderr: \"\",\n      timed_out: false,\n      exit_code: null\n    });\n    try {\n      var _res$data$exit_code;\n      const res = await axios.post(\"/run\", {\n        language,\n        code,\n        stdin,\n        timeout_seconds: 10\n      }, {\n        timeout: 20000\n      });\n      setOutput({\n        stdout: res.data.stdout || \"\",\n        stderr: res.data.stderr || \"\",\n        timed_out: res.data.timed_out || false,\n        exit_code: (_res$data$exit_code = res.data.exit_code) !== null && _res$data$exit_code !== void 0 ? _res$data$exit_code : null\n      });\n    } catch (err) {\n      setOutput({\n        stdout: \"\",\n        stderr: err.message || \"Error\",\n        timed_out: false,\n        exit_code: null\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n  const saveCode = () => {\n    const extMap = {\n      python: \"py\",\n      java: \"java\",\n      cpp: \"cpp\"\n    };\n    const filenameMap = {\n      python: \"code.py\",\n      java: \"Main.java\",\n      cpp: \"main.cpp\"\n    };\n    const ext = extMap[language] || \"txt\";\n    const filename = filenameMap[language] || `code.${ext}`;\n    const blob = new Blob([code], {\n      type: \"text/plain;charset=utf-8\"\n    });\n    const link = document.createElement(\"a\");\n    link.href = URL.createObjectURL(blob);\n    link.download = filename;\n    link.click();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-right\",\n        children: \"Online Compiler\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"app-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"left-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"top-controls\",\n          children: [/*#__PURE__*/_jsxDEV(LanguageSelector, {\n            language: language,\n            onChange: setLanguage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"action-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-run\",\n              onClick: runCode,\n              disabled: loading,\n              children: loading ? \"Running...\" : \"Run\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-save\",\n              onClick: saveCode,\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"editor-wrap\",\n          children: /*#__PURE__*/_jsxDEV(CodeEditor, {\n            language: language,\n            code: code,\n            setCode: setCode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n          stdin: stdin,\n          setStdin: setStdin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n        className: \"right-column\",\n        children: /*#__PURE__*/_jsxDEV(OutputBox, {\n          output: output\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ZmB17wZ4mmBQo6sZExvhVGLg3ZQ=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","LanguageSelector","CodeEditor","InputBox","OutputBox","jsxDEV","_jsxDEV","TEMPLATES","python","java","cpp","App","_s","language","setLanguage","code","setCode","stdin","setStdin","output","setOutput","stdout","stderr","timed_out","exit_code","loading","setLoading","runCode","_res$data$exit_code","res","post","timeout_seconds","timeout","data","err","message","saveCode","extMap","filenameMap","ext","filename","blob","Blob","type","link","document","createElement","href","URL","createObjectURL","download","click","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/prems/Documents/MyDocuments/Coding Practice/All Projects/onlinec/frontend/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport LanguageSelector from \"./components/LanguageSelector\";\nimport CodeEditor from \"./components/CodeEditor\";\nimport InputBox from \"./components/InputBox\";\nimport OutputBox from \"./components/OutputBox\";\n\nconst TEMPLATES = {\n  python: `# Python Hello World\\nname = input()\\nprint(\"Hello,\", name)`,\n  java: `// Java Hello World\\nimport java.util.*;\\npublic class Main {\\n  public static void main(String[] args) {\\n    Scanner s = new Scanner(System.in);\\n    String name = s.nextLine();\\n    System.out.println(\"Hello, \" + name);\\n  }\\n}`,\n  cpp: `// C++ Hello World\\n#include <iostream>\\nusing namespace std;\\nint main() {\\n    string name;\\n    cin >> name;\\n    cout << \"Hello, \" << name << endl;\\n    return 0;\\n}`\n};\n\nexport default function App() {\n  const [language, setLanguage] = useState(\"python\");\n  const [code, setCode] = useState(TEMPLATES.python);\n  const [stdin, setStdin] = useState(\"\");\n  const [output, setOutput] = useState({\n    stdout: \"\",\n    stderr: \"\",\n    timed_out: false,\n    exit_code: null\n  });\n  const [loading, setLoading] = useState(false);\n\n  // Update editor template when language changes\n  useEffect(() => {\n    setCode(TEMPLATES[language]);\n    setOutput({ stdout: \"\", stderr: \"\", timed_out: false, exit_code: null });\n  }, [language]);\n\n  const runCode = async () => {\n    setLoading(true);\n    setOutput({ stdout: \"\", stderr: \"\", timed_out: false, exit_code: null });\n    try {\n      const res = await axios.post(\n        \"/run\",\n        {\n          language,\n          code,\n          stdin,\n          timeout_seconds: 10\n        },\n        { timeout: 20000 }\n      );\n\n      setOutput({\n        stdout: res.data.stdout || \"\",\n        stderr: res.data.stderr || \"\",\n        timed_out: res.data.timed_out || false,\n        exit_code: res.data.exit_code ?? null\n      });\n    } catch (err) {\n      setOutput({\n        stdout: \"\",\n        stderr: err.message || \"Error\",\n        timed_out: false,\n        exit_code: null\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const saveCode = () => {\n    const extMap = { python: \"py\", java: \"java\", cpp: \"cpp\" };\n    const filenameMap = { python: \"code.py\", java: \"Main.java\", cpp: \"main.cpp\" };\n\n    const ext = extMap[language] || \"txt\";\n    const filename = filenameMap[language] || `code.${ext}`;\n    const blob = new Blob([code], { type: \"text/plain;charset=utf-8\" });\n    const link = document.createElement(\"a\");\n    link.href = URL.createObjectURL(blob);\n    link.download = filename;\n    link.click();\n  };\n\n  return (\n    <div className=\"app-container\">\n      <header className=\"app-header\">\n        <div className=\"header-left\" />\n        <div className=\"header-right\">Online Compiler</div>\n      </header>\n\n      <main className=\"app-main\">\n        <section className=\"left-column\">\n          <div className=\"top-controls\">\n            <LanguageSelector language={language} onChange={setLanguage} />\n            <div className=\"action-buttons\">\n              <button className=\"btn btn-run\" onClick={runCode} disabled={loading}>\n                {loading ? \"Running...\" : \"Run\"}\n              </button>\n              <button className=\"btn btn-save\" onClick={saveCode}>\n                Save\n              </button>\n            </div>\n          </div>\n\n          <div className=\"editor-wrap\">\n            <CodeEditor language={language} code={code} setCode={setCode} />\n          </div>\n\n          <InputBox stdin={stdin} setStdin={setStdin} />\n        </section>\n\n        <aside className=\"right-column\">\n          <OutputBox output={output} />\n        </aside>\n      </main>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}