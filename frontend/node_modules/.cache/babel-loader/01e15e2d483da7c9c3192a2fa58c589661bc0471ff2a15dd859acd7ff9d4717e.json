{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prems\\\\Documents\\\\MyDocuments\\\\Coding Practice\\\\All Projects\\\\onlinec\\\\frontend\\\\src\\\\components\\\\CodeEditor.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Editor from \"@monaco-editor/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CodeEditor() {\n  _s();\n  const [language, setLanguage] = useState(\"python\");\n  const [code, setCode] = useState(\"\");\n  let monacoLang = \"plaintext\"; // fallback\n\n  if (language === \"python\") {\n    monacoLang = \"python\";\n  } else if (language === \"java\") {\n    monacoLang = \"java\";\n  } else if (language === \"cpp\" || language === \"c++\") {\n    monacoLang = \"cpp\";\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"editor-container\",\n    style: {\n      height: \"100vh\",\n      display: \"flex\",\n      flexDirection: \"column\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: \"10px\",\n        background: \"#1e1e1e\",\n        color: \"white\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          marginRight: \"10px\"\n        },\n        children: \"Choose Language:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: language,\n        onChange: e => setLanguage(e.target.value),\n        style: {\n          padding: \"5px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"python\",\n          children: \"Python\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"java\",\n          children: \"Java\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"cpp\",\n          children: \"C++\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flexGrow: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(Editor, {\n        height: \"100%\",\n        defaultLanguage: monacoLang,\n        language: monacoLang,\n        value: code,\n        theme: \"vs-dark\",\n        options: {\n          minimap: {\n            enabled: false\n          },\n          fontSize: 14,\n          automaticLayout: true\n        },\n        onChange: value => setCode(value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(CodeEditor, \"qEhCP/NJ35ISFfVxJFXz8HefXBE=\");\n_c = CodeEditor;\nvar _c;\n$RefreshReg$(_c, \"CodeEditor\");","map":{"version":3,"names":["React","useState","Editor","jsxDEV","_jsxDEV","CodeEditor","_s","language","setLanguage","code","setCode","monacoLang","className","style","height","display","flexDirection","children","padding","background","color","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","flexGrow","defaultLanguage","theme","options","minimap","enabled","fontSize","automaticLayout","_c","$RefreshReg$"],"sources":["C:/Users/prems/Documents/MyDocuments/Coding Practice/All Projects/onlinec/frontend/src/components/CodeEditor.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Editor from \"@monaco-editor/react\";\r\n\r\nexport default function CodeEditor() {\r\n  const [language, setLanguage] = useState(\"python\");\r\n  const [code, setCode] = useState(\"\");\r\n\r\n  let monacoLang = \"plaintext\"; // fallback\r\n\r\n  if (language === \"python\") {\r\n    monacoLang = \"python\";\r\n  } else if (language === \"java\") {\r\n    monacoLang = \"java\";\r\n  } else if (language === \"cpp\" || language === \"c++\") {\r\n    monacoLang = \"cpp\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"editor-container\" style={{ height: \"100vh\", display: \"flex\", flexDirection: \"column\" }}>\r\n      {/* Language Selector */}\r\n      <div style={{ padding: \"10px\", background: \"#1e1e1e\", color: \"white\" }}>\r\n        <label style={{ marginRight: \"10px\" }}>Choose Language:</label>\r\n        <select\r\n          value={language}\r\n          onChange={(e) => setLanguage(e.target.value)}\r\n          style={{ padding: \"5px\" }}\r\n        >\r\n          <option value=\"python\">Python</option>\r\n          <option value=\"java\">Java</option>\r\n          <option value=\"cpp\">C++</option>\r\n        </select>\r\n      </div>\r\n\r\n      {/* Code Editor */}\r\n      <div style={{ flexGrow: 1 }}>\r\n        <Editor\r\n          height=\"100%\"\r\n          defaultLanguage={monacoLang}\r\n          language={monacoLang}\r\n          value={code}\r\n          theme=\"vs-dark\"\r\n          options={{\r\n            minimap: { enabled: false },\r\n            fontSize: 14,\r\n            automaticLayout: true,\r\n          }}\r\n          onChange={(value) => setCode(value)}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}